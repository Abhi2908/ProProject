<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="SyndicationWeb" duration-ms="36957" started-at="2022-02-17T00:09:07Z" finished-at="2022-02-17T00:09:43Z">
    <groups>
    </groups>
    <test name="Syndication Regression" duration-ms="36957" started-at="2022-02-17T00:09:07Z" finished-at="2022-02-17T00:09:43Z">
      <class name="syndication.web.WebTest">
        <test-method status="PASS" signature="startDrivers()[pri:0, instance:syndication.web.WebTest@6328d34a]" name="startDrivers" is-config="true" duration-ms="11" started-at="2022-02-16T18:09:05Z" finished-at="2022-02-16T18:09:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDrivers -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:syndication.web.WebTest@6328d34a]" name="setup" is-config="true" duration-ms="1357" started-at="2022-02-16T18:09:05Z" depends-on-methods="syndication.web.TestBase.startDrivers" finished-at="2022-02-16T18:09:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethodSetup(java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@6328d34a]" name="beforeMethodSetup" is-config="true" duration-ms="118" started-at="2022-02-16T18:09:07Z" finished-at="2022-02-16T18:09:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProMassEmailAsSponsor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method status="PASS" signature="synProMassEmailAsSponsor()[pri:5, instance:syndication.web.WebTest@6328d34a]" name="synProMassEmailAsSponsor" duration-ms="34616" started-at="2022-02-16T18:09:07Z" finished-at="2022-02-16T18:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- synProMassEmailAsSponsor -->
        <test-method status="PASS" signature="takescreenshotonfail(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@6328d34a]" name="takescreenshotonfail" is-config="true" duration-ms="2022" started-at="2022-02-16T18:09:41Z" finished-at="2022-02-16T18:09:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=synProMassEmailAsSponsor status=SUCCESS method=WebTest.synProMassEmailAsSponsor()[pri:5, instance:syndication.web.WebTest@6328d34a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProMassEmailAsSponsor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshotonfail -->
        <test-method status="PASS" signature="closeAllWindows()[pri:0, instance:syndication.web.WebTest@6328d34a]" name="closeAllWindows" is-config="true" duration-ms="181" started-at="2022-02-16T18:09:43Z" finished-at="2022-02-16T18:09:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAllWindows -->
        <test-method status="PASS" signature="quitDrivers()[pri:0, instance:syndication.web.WebTest@6328d34a]" name="quitDrivers" is-config="true" duration-ms="316" started-at="2022-02-16T18:09:43Z" finished-at="2022-02-16T18:09:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDrivers -->
      </class> <!-- syndication.web.WebTest -->
    </test> <!-- Syndication Regression -->
  </suite> <!-- SyndicationWeb -->
</testng-results>
