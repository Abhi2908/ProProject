<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="SyndicationWeb" duration-ms="23358" started-at="2022-02-09T02:21:28Z" finished-at="2022-02-09T02:21:51Z">
    <groups>
    </groups>
    <test name="Syndication Regression" duration-ms="23358" started-at="2022-02-09T02:21:28Z" finished-at="2022-02-09T02:21:51Z">
      <class name="syndication.web.WebTest">
        <test-method status="PASS" signature="startDrivers()[pri:0, instance:syndication.web.WebTest@2ea6137]" name="startDrivers" is-config="true" duration-ms="14" started-at="2022-02-08T20:21:26Z" finished-at="2022-02-08T20:21:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDrivers -->
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:syndication.web.WebTest@2ea6137]" name="setup" is-config="true" duration-ms="1526" started-at="2022-02-08T20:21:26Z" depends-on-methods="syndication.web.TestBase.startDrivers" finished-at="2022-02-08T20:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethodSetup(java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@2ea6137]" name="beforeMethodSetup" is-config="true" duration-ms="147" started-at="2022-02-08T20:21:28Z" finished-at="2022-02-08T20:21:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProNegativeTestForRegistrationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method status="FAIL" signature="synProNegativeTestForRegistrationPage()[pri:0, instance:syndication.web.WebTest@2ea6137]" name="synProNegativeTestForRegistrationPage" duration-ms="12165" started-at="2022-02-08T20:21:28Z" finished-at="2022-02-08T20:21:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [First Name is required] but found [Sign Up to View Opportunities
First Name
First Name is required
Last Name
Last Name is required
Email
Email is required
Phone Number
Phone number is required
Residency
Enter Residency
State is required
I am looking to invest
Select
Investment Capacity is required
Are you anaccredited investor?
Select
Accredited Investor is required
How did you hear about us?
How did you hear about us is required
Create Password
Password is required
Confirm Password
Confirm Password is required
Captcha Verification is required
Please accept terms and conditions
I have reviewed and agree to the
Terms of Service
and
Privacy Policy
Register
Already have an account?  Login here]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [First Name is required] but found [Sign Up to View Opportunities
First Name
First Name is required
Last Name
Last Name is required
Email
Email is required
Phone Number
Phone number is required
Residency
Enter Residency
State is required
I am looking to invest
Select
Investment Capacity is required
Are you anaccredited investor?
Select
Accredited Investor is required
How did you hear about us?
How did you hear about us is required
Create Password
Password is required
Confirm Password
Confirm Password is required
Captcha Verification is required
Please accept terms and conditions
I have reviewed and agree to the
Terms of Service
and
Privacy Policy
Register
Already have an account?  Login here]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at syndication.web.CommonUtils.assertString(CommonUtils.java:958)
	at syndication.helpers.SynproRegistrationHelper.negativeTestScenarioRegistrationAsInvestor(SynproRegistrationHelper.java:58)
	at syndication.web.WebTest.synProNegativeTestForRegistrationPage(WebTest.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- synProNegativeTestForRegistrationPage -->
        <test-method status="PASS" signature="takescreenshotonfail(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@2ea6137]" name="takescreenshotonfail" is-config="true" duration-ms="3303" started-at="2022-02-08T20:21:40Z" finished-at="2022-02-08T20:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=synProNegativeTestForRegistrationPage status=FAILURE method=WebTest.synProNegativeTestForRegistrationPage()[pri:0, instance:syndication.web.WebTest@2ea6137] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProNegativeTestForRegistrationPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshotonfail -->
        <test-method status="PASS" signature="beforeMethodSetup(java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@2ea6137]" name="beforeMethodSetup" is-config="true" duration-ms="8" started-at="2022-02-08T20:21:43Z" finished-at="2022-02-08T20:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProLoginAsSponsor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method status="PASS" signature="synProLoginAsSponsor()[pri:2, instance:syndication.web.WebTest@2ea6137]" name="synProLoginAsSponsor" duration-ms="5518" started-at="2022-02-08T20:21:43Z" finished-at="2022-02-08T20:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- synProLoginAsSponsor -->
        <test-method status="PASS" signature="takescreenshotonfail(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:syndication.web.WebTest@2ea6137]" name="takescreenshotonfail" is-config="true" duration-ms="2023" started-at="2022-02-08T20:21:49Z" finished-at="2022-02-08T20:21:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=synProLoginAsSponsor status=SUCCESS method=WebTest.synProLoginAsSponsor()[pri:2, instance:syndication.web.WebTest@2ea6137] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void syndication.web.WebTest.synProLoginAsSponsor()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takescreenshotonfail -->
        <test-method status="PASS" signature="closeAllWindows()[pri:0, instance:syndication.web.WebTest@2ea6137]" name="closeAllWindows" is-config="true" duration-ms="169" started-at="2022-02-08T20:21:51Z" finished-at="2022-02-08T20:21:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAllWindows -->
        <test-method status="PASS" signature="quitDrivers()[pri:0, instance:syndication.web.WebTest@2ea6137]" name="quitDrivers" is-config="true" duration-ms="0" started-at="2022-02-08T20:21:51Z" finished-at="2022-02-08T20:21:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDrivers -->
      </class> <!-- syndication.web.WebTest -->
    </test> <!-- Syndication Regression -->
  </suite> <!-- SyndicationWeb -->
</testng-results>
